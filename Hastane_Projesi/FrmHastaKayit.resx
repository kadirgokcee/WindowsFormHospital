<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>